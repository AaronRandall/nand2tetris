// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/11/pong/Bat.jack.

/**
 * A graphic Pong bat. Has a screen location, width and height.
 * Has methods for drawing, erasing, moving left and right on
 * the screen and changing the width. 
 */
class Bat {

    // The screen location
    field int x, y;

    // The width and height
    field int width, height;

    // The direction of the bat's movement
    field int direction; // 1 = left, 2 = right

    /** Constructs a new bat with the given location and width. */
    constructor Bat new(int Ax, int Ay, int Awidth, int Aheight) {
	let x = Ax;
	let y = Ay;
	let width = Awidth;
	let height = Aheight;
	let direction = 2;

        do show();

        return this;
    }

    /** Deallocates the object's memory. */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    /** Draws the bat on the screen. */
    method void show() {
        do Screen.setColor(true);
	do draw();
        return;
    }

    /** Erases the bat from the screen. */
    method void hide() {
        do Screen.setColor(false);
	do draw();
        return;
    }

    /** Draws the bat. */
    method void draw() {
	do Screen.drawRectangle(x, y, x + width, y + height);
	return;
    }

    /** Sets the direction of the bat (0=stop, 1=left, 2=right). */
    method void setDirection(int Adirection) {
	let direction = Adirection;
        return;
    }

    /** Returns the left edge of the bat. */
    method int getLeft() {
        return x;
    }

    /** Returns the right edge of the bat. */
    method int getRight() {
        return x + width;
    }

    /** Sets the width. */
    method void setWidth(int Awidth) {
        do hide();
	let width = Awidth;
        do show();
        return;
    }

    /** Moves the bat one step in its direction. */
    method void move() {
	if (direction = 1) {
            let x = x - 4;
	    if (x < 0) {
		let x = 0;
    	    }
            do Screen.setColor(false);
            do Screen.drawRectangle((x + width) + 1, y, (x + width) + 4, y + height);
            do Screen.setColor(true);
   	    do Screen.drawRectangle(x, y, x + 3, y + height);
	} 
	else {
            let x = x + 4;
	    if ((x + width) > 511) {
		let x = 511 - width;
  	    }
            do Screen.setColor(false);
            do Screen.drawRectangle(x - 4, y, x - 1, y + height);
            do Screen.setColor(true);
	    do Screen.drawRectangle((x + width) - 3, y, x + width, y + height);
	}

        return;
    }
}
